#!/bin/bash

MES_SERVER=REPL_MASTER
SM_SERVER=REPLACE
API_SERVER=REPL_API
SER_NUM=REPL_SER
MAC_ADDRESS=REPL_MAC

if [ -f "/root/finishinstall" ]; then
   curl -k -X POST -d'{"system_ident": "'"$SER_NUM"'"}' https://${API_SERVER}:3434/install/podSrvFinishInstall
   systemctl enable --now k3s.service
   chmod -x /etc/init.d/after.local
   mkdir -p /root/install-data
   mv /etc/init.d/after.local /root/install-data
else
  # set timesync
  rm /etc/chrony.d/pool.conf
  systemctl enable --now chronyd.service
  systemctl restart chronyd.service
  systemctl enable sssd.service
  systemctl --now disable transactional-update.timer

  curl -skS https://$MES_SERVER/pub/RHN-ORG-TRUSTED-SSL-CERT --output /etc/pki/trust/anchors/hub-master-ca
  curl -skS https://$SM_SERVER/pub/RHN-ORG-TRUSTED-SSL-CERT --output /etc/pki/trust/anchors/RHN-ORG-TRUSTED-SSL-CERT
  update-ca-certificates

  result=$(curl -k -X 'PUT' https://${API_SERVER}:3434/${SER_NUM}/deleteServerSuma -H 'accept: application/json')
  if [[ "$result" == *"ERR_"*  ]]; then
    curl -k -X 'POST' https://${API_SERVER}:3434/notification/${SER_NUM} \
    -H 'accept: application/json' -H 'Content-Type: application/json' \
    -d '{ "notification_type": "SUSE_OS_INSTALLATION_FAILED",
    "message": '"${result}"',
    "resource_state": "failed",
    "notification_data": {}}'
   shutdown now
  fi

  # Create salt conf for SUSE Manager
  curl -skS https://${MES_SERVER}/pub/dt-a4pod/systems/proxy_server|cat|grep 'Page Not Found' 2>&1 1>/dev/null \
  || {
    PROXY_SERVER=$(curl -skS https://${MES_SERVER}/pub/dt-a4pod/systems/proxy_server|cat|awk -F ':' '{ print $1}')
    PROXY_PORT=$(curl -skS https://${MES_SERVER}/pub/dt-a4pod/systems/proxy_server|cat|awk -F ':' '{ print $2}')
    NO_PROXY=${MES_SERVER#$(echo $MES_SERVER|awk -F '.' '{print $1}').}
    echo "proxy_host: ${PROXY_SERVER}" > /etc/salt/minion.d/proxy.conf
    echo "proxy_port: ${PROXY_PORT}" >> /etc/salt/minion.d/proxy.conf
    echo "no_proxy: [${NO_PROXY}]" >> /etc/salt/minion.d/proxy.conf
  }

  hostname -f > /etc/salt/minion_id
  echo "master: ${SM_SERVER}" > /etc/salt/minion.d/susemanager.conf
  echo "server_id_use_src: adler42" >> /etc/salt/minion.d/susemanager.conf
  echo "enable_legacy_startup_events: False" >> /etc/salt/minion.d/susemanager.conf
  echo "enable_fqdns_grains: False" >> /etc/salt/minion.d/susemanager.conf
  echo "grains:" >> /etc/salt/minion.d/susemanager.conf
  echo "  susemanager:" >> /etc/salt/minion.d/susemanager.conf
  echo "    activation_key: 1-m52-st1" >> /etc/salt/minion.d/susemanager.conf
  mv /etc/salt/minion.d/transactional_update.conf /root
  touch /etc/salt/minion.d/transactional_update.conf
  systemctl enable --now salt-minion
  chmod -x /etc/init.d/after.local
  if [[ "$SER_NUM" == *"VMware"* ]]; then
      SER_NUM=$(ip a|grep -B4 "inet "|grep "link/ether"|awk -F " " '{print $2}')
  elif [[ "$SER_NUM" == *"Not Specified"* ]]; then
      SER_NUM=$(ip a|grep -B4 "inet "|grep "link/ether"|awk -F " " '{print $2}')
  fi
  curl -k -X 'POST' https://${API_SERVER}:3434/notification/${SER_NUM} \
  -H 'accept: application/json' -H 'Content-Type: application/json' \
  -d '{ "notification_type": "SUSE_PROGRESS_INFO",
  "message": "Running post-installation script",
  "resource_state": "inProgress",
  "notification_data": {"newTimeout": '"$(date +%s -d "30 minutes")"'}}'
  sleep 60

  result=$(curl -k -X 'PUT' https://${API_SERVER}:3434/${SER_NUM}/serverPresentSuma -H 'accept: application/json')
  if [[ "$result" == *"ERR_"*  ]]; then
    curl -k -X 'POST' https://${API_SERVER}:3434/notification/${SER_NUM} \
    -H 'accept: application/json' -H 'Content-Type: application/json' \
    -d '{ "notification_type": "SUSE_OS_INSTALLATION_FAILED",
    "message": '"${result}"',
    "resource_state": "failed",
    "notification_data": {}}'
   shutdown now
  fi

  result=$(curl -k -X POST -d'{"system_ident": "'"$SER_NUM"'"}' https://${API_SERVER}:3434/install/setServerPod)
  if [[ "$result" == *"ERR_"*  ]]; then
      curl -k -X 'POST' https://${API_SERVER}:3434/notification/${SER_NUM} \
      -H 'accept: application/json' -H 'Content-Type: application/json' \
      -d '{ "notification_type": "SUSE_OS_INSTALLATION_FAILED",
      "message": '"${result}"',
      "resource_state": "failed",
      "notification_data": {}}'
     shutdown now
  else
    transactional-update -n up
    curl -k -X 'POST' https://${API_SERVER}:3434/notification/${SER_NUM} \
    -H 'accept: application/json' -H 'Content-Type: application/json' \
    -d '{ "notification_type": "SUSE_PROGRESS_INFO",
    "message": "Installation finished, Final reboot in 1 minute",
    "resource_state": "inProgress",
    "notification_data": {"newTimeout": '"$(date +%s -d "30 minutes")"'}}'
    touch /root/finishinstall
    chmod +x /etc/init.d/after.local
    init 6
  fi
fi
