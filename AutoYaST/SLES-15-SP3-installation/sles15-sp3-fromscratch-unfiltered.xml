<?xml version="1.0"?>
<!DOCTYPE profile>
<profile xmlns="http://www.suse.com/1.0/yast2ns" xmlns:config="http://www.suse.com/1.0/configns">
  <add-on>
    <add_on_products config:type="list">
      <listentry>
           <ask_on_error config:type="boolean">true</ask_on_error>
           <media_url>http://$redhat_management_server/ks/dist/child/sle-manager-tools15-pool-$arch-sp3/$distro_label</media_url>
           <name>SLE-Manager-Tools15-Pool for $arch</name>
           <product>sle-manager-tools</product>
        </listentry>
	    <listentry>
           <ask_on_error config:type="boolean">true</ask_on_error>
           <media_url>http://$redhat_management_server/ks/dist/child/sle-manager-tools15-updates-$arch-sp3/$distro_label</media_url>
           <name>SLE-Manager-Tools15-Updates for $arch</name>
           <product>sle-manager-tools</product>
        </listentry>
         <listentry>
           <ask_on_error config:type="boolean">true</ask_on_error>
           <media_url>http://$redhat_management_server/ks/dist/child/sle-module-basesystem15-sp3-pool-$arch/$distro_label</media_url>
           <name>SLE-Module-Basesystem15-SP3-Pool for $arch</name>
           <product>sle-module-basesystem</product>
        </listentry>
         <listentry>
           <ask_on_error config:type="boolean">true</ask_on_error>
           <media_url>http://$redhat_management_server/ks/dist/child/sle-module-basesystem15-sp3-updates-$arch/$distro_label</media_url>
           <name>SLE-Module-Basesystem15-SP3-Updates for $arch</name>
           <product>sle-module-basesystem</product>
        </listentry>
        <listentry>
           <ask_on_error config:type="boolean">true</ask_on_error>
           <media_url>http://$redhat_management_server/ks/dist/child/sle-module-server-applications15-sp3-pool-$arch/$distro_label</media_url>
           <name>SLE-Module-Server-Applications15-SP3-Pool for $arch</name>
           <product>sle-module-server-applications</product>
        </listentry>
         <listentry>
           <ask_on_error config:type="boolean">true</ask_on_error>
           <media_url>http://$redhat_management_server/ks/dist/child/sle-module-server-applications15-sp3-updates-$arch/$distro_label</media_url>
           <name>SLE-Module-Server-Applications15-SP3-Updates for $arch</name>
           <product>sle-module-server-applications</product>
        </listentry>
        <listentry>
           <ask_on_error config:type="boolean">true</ask_on_error>
           <media_url>http://$redhat_management_server/ks/dist/child/sle-module-containers15-sp3-pool-$arch/$distro_label</media_url>
           <name>SLE-Module-Containers-SP3-Pool for $arch</name>
           <product>sle-module-containers</product>
        </listentry>
         <listentry>
           <ask_on_error config:type="boolean">true</ask_on_error>
           <media_url>http://$redhat_management_server/ks/dist/child/sle-module-containers15-sp3-updates-$arch/$distro_label</media_url>
           <name>SLE-Module-Containers-SP3-Updates for $arch</name>
           <product>sle-module-containers</product>
        </listentry>
         <listentry>
           <ask_on_error config:type="boolean">true</ask_on_error>
           <media_url>http://$redhat_management_server/ks/dist/child/sle-module-desktop-applications15-sp3-pool-$arch/$distro_label</media_url>
           <name>SLE-Module-Desktop-Applications-SP3-Pool for $arch</name>
           <product>sle-module-desktop-applications</product>
        </listentry>
         <listentry>
           <ask_on_error config:type="boolean">true</ask_on_error>
           <media_url>http://$redhat_management_server/ks/dist/child/sle-module-desktop-applications15-sp3-updates-$arch/$distro_label</media_url>
           <name>SLE-Module-Desktop-Applications-SP3-Updates for $arch</name>
           <product>sle-module-desktop-applications</product>
        </listentry>
       <listentry>
           <ask_on_error config:type="boolean">true</ask_on_error>
           <media_url>http://$redhat_management_server/ks/dist/child/sle-product-sles15-sp3-updates-$arch/$distro_label</media_url>
           <name>SLE-15-SP3-Updates for $arch</name>
           <product>SLES</product>
        </listentry>
        <listentry>
           <ask_on_error config:type="boolean">true</ask_on_error>
           <media_url>http://$redhat_management_server/ks/dist/child/sle15-sp3-installer-updates-$arch/$distro_label</media_url>
           <name>SLE-15-SP3-Installer Updates for $arch</name>
           <product>SLES</product>
        </listentry>
    </add_on_products>
  </add-on>
  <general>
     <signature-handling>
      <accept_unsigned_file         config:type="boolean">true</accept_unsigned_file>
      <accept_file_without_checksum config:type="boolean">true</accept_file_without_checksum>
      <accept_verification_failed   config:type="boolean">true</accept_verification_failed>
      <accept_unknown_gpg_key       config:type="boolean">true</accept_unknown_gpg_key>
      <import_gpg_key               config:type="boolean">true</import_gpg_key>
      <accept_non_trusted_gpg_key   config:type="boolean">true</accept_non_trusted_gpg_key>
     </signature-handling>
  <mode><confirm config:type="boolean">false</confirm></mode>
  </general>
    <storage>
      <partition_alignment config:type="symbol">align_optimal</partition_alignment>
      <start_multipath config:type="boolean">false</start_multipath>
    </storage>

<!-- configure local storage -->
  <partitioning config:type="list">
    <drive>
      <use>all</use>
      <partitions config:type="list">
        <partition>
          <mount>/boot/efi</mount>
          <size>200mb</size>
          <partition_id config:type="integer">1</partition_id>
          <filesystem config:type="symbol">vfat</filesystem>
        </partition>
        <partition>
          <filesystem config:type="symbol">ext4</filesystem>
          <mount>/</mount>
          <size>max</size>
        </partition>
      </partitions>
    </drive>
  </partitioning>

  <networking>
    <keep_install_network config:type="boolean">true</keep_install_network>
  </networking>

  <!-- configure language and timezone -->
  <keyboard>
    <keymap>english-us</keymap>
  </keyboard>
  <language>
    <language>en_US</language>
    <languages/>
  </language>
  <timezone>
    <hwclock>UTC</hwclock>
    <timezone>America/Detroit</timezone>
  </timezone>

  <!-- configure ntp client -->
  <ntp-client>
    <ntp_policy>auto</ntp_policy>
    <ntp_servers config:type="list">
      <ntp_server>
        <!-- replace ntp server address value bellow with one from your infrastructure -->
        <address>69.164.198.192</address>
        <iburst config:type="boolean">true</iburst>
        <offline config:type="boolean">true</offline>
      </ntp_server>
    </ntp_servers>
    <ntp_sync>systemd</ntp_sync>
  </ntp-client>

  <services-manager>
    <default_target>multi-user</default_target>
    <services>
      <disable config:type="list">
        <service>purge-kernels</service>
        <service>firewalld</service>
      </disable>
      <enable config:type="list">
        <service>sshd</service>
        <service>chronyd</service>
      </enable>
    </services>
  </services-manager>

  <software>
    <install_recommended config:type="boolean">true</install_recommended>
    <instsource/>
    <packages config:type="list">
      <package>salt-minion</package>
      <package>vim</package>
    </packages>
    <patterns config:type="list">
      <pattern>base</pattern>
      <pattern>minimal_base</pattern>
    </patterns>
    <products config:type="list">
      <listentry>SLES</listentry>
    </products>
  </software>

  <users config:type="list">
    <user>
      <encrypted config:type="boolean">false</encrypted>
      <fullname>root</fullname>
      <gid>0</gid>
      <home>/root</home>
      <password_settings>
        <expire/>
        <flag/>
        <inact/>
        <max/>
        <min/>
        <warn/>
      </password_settings>
      <shell>/bin/bash</shell>
      <uid>0</uid>
      <user_password>susemanager</user_password>
      <username>root</username>
    </user>
  </users>
 <scripts>
  <pre-scripts config:type="list">
    <script>
        <filename>01_install_cert</filename>
        <interpreter>shell</interpreter>
        <source><![CDATA[
/usr/bin/wget -nv -r -nd --no-check-certificate https://$redhat_management_server/pub/RHN-ORG-TRUSTED-SSL-CERT
mv RHN-ORG-TRUSTED-SSL-CERT /etc/pki/trust/anchors/
/usr/sbin/update-ca-certificates
     ]]></source>
   </script>
  </pre-scripts>
  <chroot-scripts config:type="list">
    <script>
      <debug config:type="boolean">true</debug>
      <feedback config:type="boolean">false</feedback>
      <filename>chroot.sh</filename>
        <interpreter>shell</interpreter>
        <notification>Removing old repository info</notification>
        <source><![CDATA[
zypper ms -d --all
zypper ms -e --medium-type plugin
zypper mr -d --all
zypper mr -e --medium-type plugin
rm -rf /etc/zypp/repos.d/http*
rm -rf /mnt/etc/zypp/repos.d/space* >/mnt/tmp/removed-at-chroot
/usr/bin/wget -nv -r -nd --no-check-certificate https://$redhat_management_server/pub/RHN-ORG-TRUSTED-SSL-CERT
mv RHN-ORG-TRUSTED-SSL-CERT /mnt/etc/pki/trust/anchors/
/usr/sbin/update-ca-certificates
]]>
        </source>
      </script>
    </chroot-scripts>
  <init-scripts config:type="list">
  <script>
    <filename>uyuni-minion.sh</filename>
    <source>
        <![CDATA[
cat <<EOF >"/etc/salt/minion.d/susemanager.conf"
master: $redhat_management_server
server_id_use_crc: adler32
enable_legacy_startup_events: False
enable_fqdns_grains: False
mine_enabled: False

EOF
#set activation_keys = ""
#set management_key  = ""
#if $varExists('registration_key')
   #set activation_keys = $registration_key
#end if

#if $varExists('redhat_management_key')
   #set management_key = $redhat_management_key.split(",",1)[0]
#end if

#if not $activation_keys and $management_key
  #set keys= $redhat_management_key.split(",",1)
  #if len(keys) > 1
     #set activation_keys = $keys[1]
  #end if
#end if

#if $activation_keys or $management_key
cat <<EOF >>"/etc/salt/minion.d/susemanager.conf"
grains:
    susemanager:
EOF
#end if
#if $management_key
cat <<EOF >>"/etc/salt/minion.d/susemanager.conf"
        management_key: "$management_key"
EOF
#end if
#if $activation_keys
cat <<EOF >>"/etc/salt/minion.d/susemanager.conf"
        activation_key: "$activation_keys"
EOF
#end if

#if not $varExists('dont_register')
# if you don't want to register, set the 'dont_register' variable

systemctl restart salt-minion
systemctl enable salt-minion
#end if

#if not $varExists('dont_disable_automatic_onlineupdate')
YAOU_SYSCFGFILE="/etc/sysconfig/automatic_online_update"
if [ -f "$YAOU_SYSCFGFILE" ]; then
  echo "* Disable YAST automatic online update."
  sed -i 's/^ *AOU_ENABLE_CRONJOB.*/AOU_ENABLE_CRONJOB="false"/' "$YAOU_SYSCFGFILE"
  for D in /etc/cron.*; do
    test -L $D/opensuse.org-online_update && rm $D/opensuse.org-online_update
  done
fi
#end if

#if not $varExists('dont_disable_local_repos')
echo "* Disable all repos not provided by SUSE Manager Server."
zypper ms -d --all
zypper ms -e --medium-type plugin
zypper mr -d --all
zypper mr -e --medium-type plugin
rm /etc/zypp/repos.d/http*
update-ca-certificates
#end if
systemctl stop salt-minion
sleep 10
systemctl start salt-minion
        ]]>
    </source>
  </script>
  </init-scripts>
 </scripts>
</profile>
